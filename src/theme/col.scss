$span_length: 24; // 栅格个数
$span_width: 100% / $span_length; // 单个最少宽度
$Col: ".c-col";

/* 栅格布局 */
@mixin GridFlex ($span_width, $length) {
	@for $index from 1 to $length + 1 {
    #{$Col}-span-#{$index} {
      float: left;
      flex: 0 0 auto;
      box-sizing: border-box;
    };
    #{$Col}-span-#{$index}
		{
			width: $span_width * ($index)
		}
    /* 偏移量计算 */
    #{$Col}-offset-#{$index}
    {
      margin-left: $span_width * ($index)
    }
	}
}
@include GridFlex($span_width,$span_length);

/* xs样式 */
@media only screen and (max-width: 767px) {
	@mixin mediaXsType ($span_width, $length) {
		@for $index from 1 to $length + 1 {
      #{$Col}-xs-#{$index}
			{
				width: $span_width * ($index)
			}
		}
	}
	@include mediaXsType($span_width,$span_length)
}	

/* sm样式 */
@media only screen and (min-width: 768px) {
	@mixin mediaSmType ($span_width, $length) {
		@for $index from 1 to $length + 1 {
      #{$Col}-sm-#{$index}
			{
				width: $span_width * ($index)
			}
		}
	}
	@include mediaSmType($span_width,$span_length)
}

/* md样式 */
@media only screen and (min-width: 992px) {
	@mixin mediaMdType ($span_width, $length) {
		@for $index from 1 to $length + 1 {
      #{$Col}-md-#{$index}
			{
				width: $span_width * ($index)
			}
		}
	}
	@include mediaMdType($span_width,$span_length)
}